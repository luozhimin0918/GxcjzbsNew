apply plugin: 'com.android.application'
apply plugin: 'android-apt'

//android配置
def config = rootProject.ext.android

//相关库依赖
def librarys = rootProject.ext.supportDependencies

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId "com.jyh.gxcjzbs"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
             //        exclude 'META-INF/DEPENDENCIES'
            //        exclude 'META-INF/NOTICE'
           //        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    /**
     *compile  librarys
     */
    compile librarys.appcompatV7
    compile librarys.supportConstraintLayout
    apt librarys.butterKnifeCompoler

    /**
     *publiclibrary  moudle
     */
    releaseCompile project(path: ':LuoPublicLibrary', configuration: 'release')
    debugCompile project(path: ':LuoPublicLibrary', configuration: 'debug')

}
